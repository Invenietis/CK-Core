//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CK.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class R {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal R() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CK.Core.R", typeof(R).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &apos;{0}&apos; can be registered in only one IActivityLogger.Output at the same time. Unregister it before Registering it in another logger..
        /// </summary>
        internal static string ActivityLoggerBoundClientMultipleRegister {
            get {
                return ResourceManager.GetString("ActivityLoggerBoundClientMultipleRegister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Concurrent accesses from 2 threads to the same ActivityLogger has been detected. Only one thread at a time can interact with an ActivityLogger..
        /// </summary>
        internal static string ActivityLoggerConcurrentThreadAccess {
            get {
                return ResourceManager.GetString("ActivityLoggerConcurrentThreadAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error while getting conclusion text: &apos;{0}&apos;..
        /// </summary>
        internal static string ActivityLoggerErrorWhileGetConclusionText {
            get {
                return ResourceManager.GetString("ActivityLoggerErrorWhileGetConclusionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reentrant call in an ActivityLogger has been detected. A logger usage must not trigger another operation on the same logger..
        /// </summary>
        internal static string ActivityLoggerReentrancyError {
            get {
                return ResourceManager.GetString("ActivityLoggerReentrancyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error: Error during release reentrancy operation. Thread id={0} entered whereas release is called from thread &apos;{1}&apos;, id={2}..
        /// </summary>
        internal static string ActivityLoggerReentrancyReleaseError {
            get {
                return ResourceManager.GetString("ActivityLoggerReentrancyReleaseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument count can not be negative..
        /// </summary>
        internal static string ArgumentCountNegative {
            get {
                return ResourceManager.GetString("ArgumentCountNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must not be null or whitespace..
        /// </summary>
        internal static string ArgumentMustNotBeNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("ArgumentMustNotBeNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not Unregister the Tap, PathCatcher or ErrorCounter of a default logger..
        /// </summary>
        internal static string CanNotUnregisterDefaultClient {
            get {
                return ResourceManager.GetString("CanNotUnregisterDefaultClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prematurely closed by Bridge removed..
        /// </summary>
        internal static string ClosedByBridgeRemoved {
            get {
                return ResourceManager.GetString("ClosedByBridgeRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateTime must be Utc. Use DateTime.UtcNow to obtain it for instance..
        /// </summary>
        internal static string DateTimeMustBeUtc {
            get {
                return ResourceManager.GetString("DateTimeMustBeUtc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is direcly supported by the container. It can not be disabled..
        /// </summary>
        internal static string DirectServicesCanNotBeDisabled {
            get {
                return ResourceManager.GetString("DirectServicesCanNotBeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error handler raised the error. It has been removed from the CriticalErrorCollector.OnErrorFromBackgroundThreads event..
        /// </summary>
        internal static string ErrorWhileCollectorRaiseError {
            get {
                return ResourceManager.GetString("ErrorWhileCollectorRaiseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occured while resolving type: {0}..
        /// </summary>
        internal static string ExceptionWhileResolvingType {
            get {
                return ResourceManager.GetString("ExceptionWhileResolvingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected attribute &apos;{0}&apos;..
        /// </summary>
        internal static string ExpectedXmlAttribute {
            get {
                return ResourceManager.GetString("ExpectedXmlAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected EndElement token named {0}..
        /// </summary>
        internal static string ExpectedXmlEndElement {
            get {
                return ResourceManager.GetString("ExpectedXmlEndElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FIFOBuffer is empty..
        /// </summary>
        internal static string FIFOBufferEmpty {
            get {
                return ResourceManager.GetString("FIFOBufferEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid assembly qualified name..
        /// </summary>
        internal static string InvalidAssemblyQualifiedName {
            get {
                return ResourceManager.GetString("InvalidAssemblyQualifiedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible use of the wrong overload: Use the form that takes a first parameter of type Exception and then the string text instead of this ( string format, object arg0, ... ) method to log the exception, or calls this overload explicitely with the Exception.Message string..
        /// </summary>
        internal static string PossibleWrongOverloadUseWithException {
            get {
                return ResourceManager.GetString("PossibleWrongOverloadUseWithException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is directly supported by the container..
        /// </summary>
        internal static string ServiceAlreadyDirectlySupported {
            get {
                return ResourceManager.GetString("ServiceAlreadyDirectlySupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is already registered by the container..
        /// </summary>
        internal static string ServiceAlreadyRegistered {
            get {
                return ResourceManager.GetString("ServiceAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is not implemented by object {1} returned by the callback..
        /// </summary>
        internal static string ServiceImplCallbackTypeMismatch {
            get {
                return ResourceManager.GetString("ServiceImplCallbackTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is not implemented by object {1}..
        /// </summary>
        internal static string ServiceImplTypeMismatch {
            get {
                return ResourceManager.GetString("ServiceImplTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be not null and registered in ActivityLogger.RegisteredTags..
        /// </summary>
        internal static string TagMustBeRegisteredInActivityLogger {
            get {
                return ResourceManager.GetString("TagMustBeRegisteredInActivityLogger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Traits must belong to the same context..
        /// </summary>
        internal static string TraitsMustBelongToTheSameContext {
            get {
                return ResourceManager.GetString("TraitsMustBelongToTheSameContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find service &apos;{0}&apos;..
        /// </summary>
        internal static string UnregisteredServiceInServiceProvider {
            get {
                return ResourceManager.GetString("UnregisteredServiceInServiceProvider", resourceCulture);
            }
        }
    }
}
